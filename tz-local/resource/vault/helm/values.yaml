global:
  enabled: true
  tlsDisable: true
  imagePullSecrets:
    - name: tz-registrykey

injector:
  enabled: true
  image:
    repository: "hashicorp/vault-k8s"
    tag: "latest"

  resources:
      requests:
        memory: 256Mi
        cpu: 250m
      limits:
        memory: 256Mi
        cpu: 250m

server:
#  dev:
#    enabled: true
  extraSecretEnvironmentVars:
    - envName: AWS_ACCESS_KEY_ID
      secretName: eks-creds
      secretKey: AWS_ACCESS_KEY_ID
    - envName: AWS_SECRET_ACCESS_KEY
      secretName: eks-creds
      secretKey: AWS_SECRET_ACCESS_KEY

  resources:
    requests:
      memory: 2Gi
      cpu: 800m
    limits:
      memory: 4Gi
      cpu: 2000m
  readinessProbe:
    enabled: true
    path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
  livenessProbe:
    enabled: true
    path: "/v1/sys/health?standbyok=true"
    initialDelaySeconds: 60

#  extraEnvironmentVars:
#    VAULT_CACERT: /vault/userconfig/tls-ca/ca.crt

#  extraVolumes:
#    - type: secret
#      name: tls-server
#    - type: secret
#      name: tls-ca
#    - type: secret
#      name: kms-creds

  auditStorage:
    enabled: true
    size: 1Gi

  dataStorage:
    enabled: true
    size: 1Gi

  standalone:
    enabled: false

  ha:
    enabled: true
    replicas: 3
    raft:
      enabled: false
#      setNodeId: true

  config: |
    ui = true
    listener "tcp" {
      address = "[::]:8200"
      cluster_address = "[::]:8201"
    }
    storage "consul" {
      path = "vault"
      address = "consul-server.consul.svc.cluster.local:8500"
    }
    service_registration "kubernetes" {}
#      tls_cert_file = "/vault/userconfig/tls-server/server.crt"
#      tls_key_file = "/vault/userconfig/tls-server/server.key"
#      tls_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"

ui:
  enabled: true
#  serviceType: "LoadBalancer"
  serviceType: NodePort
  serviceNodePort: null
  externalPort: 8200

