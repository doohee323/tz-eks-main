#apiVersion: v1
#kind: ServiceAccount
#metadata:
#  name: devops-dev-svcaccount
#  labels:
#    app: vault-agent-devops-web
#
#---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: devops-web-k8s
spec:
  selector:
    matchLabels:
      app: devops-web-k8s
  replicas: 1
  template:
    metadata:
      labels:
        org: tz
        team: devops
        project: demo
        environment: dev
        app: devops-web-k8s
      annotations:
        "prometheus.io/scrape": "true"
        "prometheus.io/port": "9000"
        "prometheus.io/path": "/metrics"
        "prometheus.io/scheme": "http"
    spec:
#      serviceAccountName: devops-dev-svcaccount
      containers:
      - name: devops-web-k8s
        image: aws_account_id.dkr.ecr.ap-northeast-1.amazonaws.com/devops-web:81
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: devops-web-configmap
        volumeMounts:
        - name: persistent-storage
          mountPath: /data
      volumes:
      - name: persistent-storage
        persistentVolumeClaim:
          claimName: ebs-claim-devops-web
      nodeSelector:
        team: devops
        environment: dev
---

apiVersion: v1
kind: Service
metadata:
  name: devops-web-k8s
spec:
  selector:
    app: devops-web-k8s
  ports:
  - protocol: TCP
    port: 9000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: devops-nginx-k8s
spec:
  selector:
    matchLabels:
      app: devops-nginx-k8s
  replicas: 1
  template:
    metadata:
      labels:
        org: tz
        team: devops
        project: demo
        environment: dev
        app: devops-nginx-k8s
      annotations:
        "prometheus.io/scrape": "true"
        "prometheus.io/port": "80"
        "prometheus.io/path": "/metrics"
        "prometheus.io/scheme": "http"
    spec:
#      serviceAccountName: devops-dev-svcaccount
      containers:
      - name: nginx
        image: aws_account_id.dkr.ecr.ap-northeast-1.amazonaws.com/devops-nginx:81
        volumeMounts:
        - name: persistent-storage
          mountPath: /data
      volumes:
      - name: persistent-storage
        persistentVolumeClaim:
          claimName: ebs-claim-devops-web
      nodeSelector:
        team: devops
        environment: dev

---
apiVersion: v1
kind: Service
metadata:
  name: devops-nginx-k8s
spec:
  selector:
    app: devops-nginx-k8s
  ports:
  - protocol: TCP
    port: 80

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: devops-web-configmap
data:
  container_env: 'docker'

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: devops-web-k8s
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  rules:
  - host: k8s.default.eks_project.tzcorp.com
    http:
      paths:
      - path: /
        backend:
          serviceName: devops-nginx-k8s
          servicePort: 80

  tls:
    - hosts:
        - k8s.default.eks_project.tzcorp.com
      secretName: devops-web-tls-k8s
