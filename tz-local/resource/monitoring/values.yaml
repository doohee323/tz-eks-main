prometheusOperator:
  enabled: true
  serviceMonitor:
    selfMonitor: true
  resources:
   limits:
     cpu: 200m
     memory: 200Mi
   requests:
     cpu: 100m
     memory: 100Mi
  nodeSelector:
    environment: monitoring
    team: devops
#  affinity:
#    nodeAffinity:
#     requiredDuringSchedulingIgnoredDuringExecution:
#       nodeSelectorTerms:
#       - matchExpressions:
#         - key: kubernetes.io/e2e-az-name
#           operator: In
#           values:
#           - e2e-az1
#           - e2e-az2

prometheus:
  prometheusSpec:
    externalUrl: https://prometheus.default.eks_project.eks_domain
#    remoteWrite:
#    - url: "https://mimir.default.eks-main.tzcorp.com/api/v1/push"
#      basicAuth:
#          username:
#            name: grafanacloudsecret
#            key: username
#          password:
#            name: grafanacloudsecret
#            key: password
    nodeSelector:
      environment: monitoring
      team: devops
#    podAntiAffinity: ""
#    podAntiAffinityTopologyKey: kubernetes.io/hostname
#    affinity:
#     nodeAffinity:
#       requiredDuringSchedulingIgnoredDuringExecution:
#         nodeSelectorTerms:
#         - matchExpressions:
#           - key: kubernetes.io/e2e-az-name
#             operator: In
#             values:
#             - e2e-az1
#             - e2e-az2
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: 50Gi
          storageClassName: gp2
    additionalScrapeConfigs:
      - job_name: 'tz-kubernetes-pod-job'
        scrape_interval: 15s
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        # only scrape when annotation prometheus.io/scrape: 'true' is set
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name
#      - job_name: 'tz-kubernetes-service-endpoints'
#        kubernetes_sd_configs:
#        - role: endpoints
#        relabel_configs:
##          annotation:
##            prometheus.io/scrape: 'true'
##            prometheus.io/path: /metrics
##            prometheus.io/port: '9900'
##            prometheus.io/scheme: http
#        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
#          action: keep
#          regex: true
#        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
#          action: replace
#          target_label: __metrics_path__
#          regex: (.+)
#        - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
#          action: replace
#          regex: ([^:]+)(?::\d+)?;(\d+)
#          replacement: $1:$2
#          target_label: __address__
#        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
#          action: replace
#          target_label: __scheme__
#          regex: (https?)
#        - action: labelmap
#          regex: __meta_kubernetes_service_label_(.+)
#        - source_labels: [__meta_kubernetes_namespace]
#          action: replace
#          target_label: kubernetes_namespace
#        - source_labels: [__meta_kubernetes_service_name]
#          action: replace
#          target_label: kubernetes_name
      - job_name: 'jenkins'
        metrics_path: /prometheus/
        static_configs:
          - targets: ['jenkins.tzcorp.com:80']
        scheme: http
        tls_config:
          insecure_skip_verify: true
        basic_auth:
          username: 'devops'
          password: 'admin_password'
      - job_name: 'tz-blackbox-exporter'
        metrics_path: /probe
        params:
          module: [http_2xx]
        static_configs:
          - targets:
            - http://tzcorp.com
            - https://tzcorp.com
            - http://jenkins.tzcorp.com/login
            - https://argocd.tzcorp.com
            - https://grafana.tzcorp.com
            - https://prometheus.tzcorp.com
            - https://alertmanager.default.eks_project.tzcorp.com
            - https://vault.tzcorp.com
            - https://consul.tzcorp.com
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: tz-blackbox-exporter-prometheus-blackbox-exporter:9115
      - job_name: 'prometheus'
        metrics_path: /metrics
        static_configs:
          - targets:
            # jenkins
            - 20.10.11.28:9090
            # devopsre-job
            - 10.0.1.138:9090
            # devopsre-prod
            - 10.0.2.184:9090
            - 10.0.1.212:9090
            - 10.0.1.221:9090
            # devopskr-mrd
            - 54.180.146.14:9090
        scheme: http
      - job_name: 'node-exporter'
        scrape_interval: 5s
        static_configs:
          - targets:
            # jenkins
            - 20.10.11.28:9100
            # devopsre-job
            - 10.0.1.138:9100
            # devopsre-prod
            - 10.0.2.184:9100
            - 10.0.1.212:9100
            - 10.0.1.221:9100
            # devopskr-mrd
            - 54.180.146.14:9100

grafana:
  enabled: true
  nodeSelector:
    environment: monitoring
    team: devops
  persistence:
    enabled: true
    type: pvc
    storageClassName: gp2
    accessModes:
    - ReadWriteOnce
    size: 5Gi
#    finalizers:
#    - kubernetes.io/pvc-protection

alertmanager:
  config:
    global:
      resolve_timeout: 5m
      smtp_from: devops@tz.com
      smtp_smarthost: smtp.gmail.com:587
      smtp_auth_username: devops@tz.com
      smtp_auth_password: admin_password
      smtp_require_tls: true
      slack_api_url: https://hooks.slack.com/services/xxxxxxxxxx/xxxxxxxxxx/xxxxxxxxxx
    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: devops-admin
      routes:
    #      - receiver: 'devops-admin'
    #        match:
    #          alertname: Watchdog
    #  - receiver: 'devops-dev'
    #    match:
    #      instance: http://tz-sample-app.devops-dev.svc
      - receiver: devops-dev
        match:
          team: devops_dev
    #  - receiver: 'devops-prod'
    #    match:
    #      instance: http://tz-sample-app.devops.svc
      - receiver: devops-prod
        match:
          team: devops_prod
#      - match:
#          alertname: Watchdog
#          receiver: "null"
#      - match:
#          alertname: CPUThrottlingHigh
#        receiver: "null"
    receivers:
    - name: devops-admin
      slack_configs:
      - send_resolved: true
        channel: eks-alert
        title: |-
          {{ range .Alerts }}{{ .Annotations.summary }}
          {{ end }}
        text: '{{ template "slack.default.text" . }}'
      email_configs:
      - send_resolved: true
        to: devops@tz.com
    - name: devops-dev
      slack_configs:
      - send_resolved: true
        channel: eks-alert
        title: |-
          {{ range .Alerts }}{{ .Annotations.summary }}
          {{ end }}
        text: '{{ template "slack.default.text" . }}'
      email_configs:
      - send_resolved: true
        to: doohee.hong@tz.kr
    - name: devops-prod
      slack_configs:
      - send_resolved: true
        channel: eks-alert
        title: |-
          {{ range .Alerts }}{{ .Annotations.summary }}
          {{ end }}
        text: '{{ template "slack.default.text" . }}'
      email_configs:
      - send_resolved: true
        to: doohee323@gmail.com
    templates:
    - /etc/alertmanager/config/*.tmpl
  alertmanagerSpec:
    externalUrl: https://alertmanager.default.eks_project.eks_domain
    nodeSelector:
      environment: monitoring
      team: devops
#    affinity:
#     nodeAffinity:
#       requiredDuringSchedulingIgnoredDuringExecution:
#         nodeSelectorTerms:
#         - matchExpressions:
#           - key: kubernetes.io/e2e-az-name
#             operator: In
#             values:
#             - e2e-az1
#             - e2e-az2
#    podAntiAffinity: ""
#    podAntiAffinityTopologyKey: kubernetes.io/hostname
