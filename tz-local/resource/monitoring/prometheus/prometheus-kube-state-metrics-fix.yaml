kind: Deployment
apiVersion: apps/v1
metadata:
  name: prometheus-kube-state-metrics
  namespace: monitoring
  labels:
    app.kubernetes.io/instance: prometheus
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/version: 2.0.0
    helm.sh/chart: kube-state-metrics-3.1.0
  annotations:
    deployment.kubernetes.io/revision: '1'
    meta.helm.sh/release-name: prometheus
    meta.helm.sh/release-namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: kube-state-metrics
    spec:
      containers:
        - name: kube-state-metrics
          image: 'k8s.gcr.io/kube-state-metrics/kube-state-metrics:v1.9.8'
          args:
            - '--collectors=certificatesigningrequests'
            - '--collectors=configmaps'
            - '--collectors=cronjobs'
            - '--collectors=daemonsets'
            - '--collectors=deployments'
            - '--collectors=endpoints'
            - '--collectors=horizontalpodautoscalers'
            - '--collectors=ingresses'
            - '--collectors=jobs'
            - '--collectors=limitranges'
            - '--collectors=mutatingwebhookconfigurations'
            - '--collectors=namespaces'
            - '--collectors=networkpolicies'
            - '--collectors=nodes'
            - '--collectors=persistentvolumeclaims'
            - '--collectors=persistentvolumes'
            - '--collectors=poddisruptionbudgets'
            - '--collectors=pods'
            - '--collectors=replicasets'
            - '--collectors=replicationcontrollers'
            - '--collectors=resourcequotas'
            - '--collectors=secrets'
            - '--collectors=services'
            - '--collectors=statefulsets'
            - '--collectors=storageclasses'
            - '--collectors=validatingwebhookconfigurations'
            - '--collectors=volumeattachments'
            - '--telemetry-port=8081'
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: prometheus-kube-state-metrics
      serviceAccount: prometheus-kube-state-metrics
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
