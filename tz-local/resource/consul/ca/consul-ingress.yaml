apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    run: nginx
spec:
  type: ClusterIP
  ports:
  - port: 80
    protocol: TCP

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-consul
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
#    nginx.ingress.kubernetes.io/auth-type: basic
#    nginx.ingress.kubernetes.io/auth-secret: basic-auth-consul
#    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - admin'
spec:
  rules:
#  - host: consul-server.eks_domain
#    http:
#      paths:
#      - path: /
#        backend:
#          serviceName: consul-server
#          servicePort: 8500
#  - host: consul.eks_domain
#    http:
#      paths:
#      - path: /
#        backend:
#          serviceName: consul-ui
#          servicePort: 80
  - host: consul-server.default.eks_project.eks_domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: consul-server
            port:
              number: 8500
#  - host: consul.default.eks_project.eks_domain
#    http:
#      paths:
#      - path: /
#        backend:
#          serviceName: consul-ui
#          servicePort: 80
  tls:
    - hosts:
#        - consul-server.eks_domain
#        - consul.eks_domain
        - consul-server.default.eks_project.eks_domain
#        - consul.default.eks_project.eks_domain
      secretName: ingress-consul-tls
